version: "3.7"

networks:
    bridge:
        driver: bridge

volumes:
    mongo_db:
        name: mongo_db
        driver: local
        driver_opts:
            device: 'D:\Docker\data\db'
            o: 'bind'
            type: 'none'
    mongo_configdb:
        name: mongo_configdb
        driver: local
        driver_opts:
            device: 'D:\Docker\data\configdb'
            o: 'bind'
            type: 'none'
    elasticsearch_data:
        name: elasticsearch_data
        driver: local
        driver_opts:
            device: 'D:\Docker\elasticsearch\data'
            o: 'bind'
            type: 'none'
    graylog_journal:
        name: graylog_journal
        driver: local
        driver_opts:
            device: 'D:\Docker\graylog\journal'
            o: 'bind'
            type: 'none'
    graylog_config:
        name: graylog_config
        driver: local
        driver_opts:
            device: 'D:\Docker\graylog\config'
            o: 'bind'
            type: 'none'
    exchange_service_logs:
        name: exchange_service_logs
        driver: local
        driver_opts:
            device: 'D:\Docker\exchange\service\logs'
            o: 'bind'
            type: 'none'

services:
    # nginx: 
    #     image: nginx:latest
    #     container_name: nginx
    #     volumes:
    #       - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    #     ports:
    #       - 80:80
    #       - 443:443
    #     networks:
    #         bridge:

    # mongo Database
    service.mongodb:
        image: mongo:${MONGO_DB_VERSION}
        # restart: always
        container_name: mongodb
        # List directories to mount
        volumes:
            - mongo_db:/data/db:rw
            - mongo_configdb:/data/configdb:rw
            - ./docker/mongodb/init.sh:/init.sh:rw
            - ./docker/mongodb/mongo-users-init.js:/docker-entrypoint-initdb.d/mongo-users-init.js:rw
        command: [
            "./init.sh"
        ]
        ports:
            - 27017:27017
            - 27018:27018
            - 27019:27019
        networks:
            bridge:
      
    # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.6/docker.html
    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.6.1
        #data folder in share for persistence
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
        environment:
            - http.host=0.0.0.0
            - transport.host=localhost
            - network.host=0.0.0.0
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        mem_limit: 1g
        ports:
            - 9200:9200
            - 9300:9300
        links:
            - service.mongodb
        depends_on:
            - service.mongodb
        networks:
            bridge:
      
    # Graylog: https://hub.docker.com/r/graylog/graylog/
    graylog:
        container_name: graylog
        restart: always
        image: graylog/graylog:3.3.8-1
        #journal and config directories in local NFS share for persistence
        volumes:
            - graylog_journal:/usr/share/graylog/data/journal
            - graylog_config:/usr/share/graylog/data/config
        environment:
            - GRAYLOG_HTTP_BIND_ADDRESS=${GRAYLOG_HTTP_BIND_ADDRESS}
            - GRAYLOG_WEB_ENDPOINT_URI=${GRAYLOG_WEB_ENDPOINT_URI}
            # CHANGE ME (must be at least 16 characters)!
            - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD_SECRET}
            # Password: admin
            - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_PASSWORD_SHA2}
            - GRAYLOG_HTTP_EXTERNAL_URI=${GRAYLOG_HTTP_EXTERNAL_URI}
            - GRAYLOG_MONGODB_URI=${GRAYLOG_MONGODB_URI}
            - GRAYLOG_ELASTICSEARCH_HOSTS=${GRAYLOG_ELASTICSEARCH_HOSTS}
            - GRAYLOG_ROOT_TIMEZONE=${GRAYLOG_ROOT_TIMEZONE}
        links:
            - service.mongodb
            - elasticsearch
        ports:
            # Graylog web interface and REST API
            - 7555:7555
            # Syslog TCP
            - 8514:8514
            # Syslog UDP
            - 8514:8514/udp
            # GELF TCP
            - 12201:12201
            # GELF UDP
            - 12201:12201/udp
        networks:
            bridge:

    #celery
    celery:
        container_name: celery
        # All files and folders in the currect directory
        build: 
            context: .
            dockerfile: ./docker/service.machine.learning/Dockerfile 
        # List directories to mount
        command: celery -A app.tasks.task_work:celery worker --loglevel=info -P eventlet
        depends_on:
            - graylog
            - service.mongodb
        environment:
            - MI_HOST=${MI_HOST}
            - MI_PORT=${MI_PORT}
            - MI_GRAYLOG_HOST=${MI_GRAYLOG_HOST}
            - MI_GRAYLOG_PORT=${MI_GRAYLOG_PORT}
            - MI_BROKER_URL=${MI_BROKER_URL}
            - MI_RESULT_BACKEND=${MI_RESULT_BACKEND}
        networks:
            bridge:
        
    #machine learning web application
    service.machine.learning:
        container_name: service.machine.learning
        build: 
            context: .
            dockerfile: ./docker/service.machine.learning/Dockerfile    
        # Application will run on port 5005
        # Access to directory has to be shared
        ports:
            - 5005:5005
        command: python3.8 main.py
        depends_on:
            - graylog
            - service.mongodb
        networks:
            bridge:

    #main exchange service
    exchange.service:   
        container_name: exchange.service
        build:
            context: .
            dockerfile: ./docker/exchange.service/Dockerfile
        volumes:
            - exchange_service_logs:/exchange/service/logs:rw
        ports:
            - 5000:5000
            - 5001:5001
        command: dotnet exchange.service.dll
        environment:
            - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        networks:
            bridge:
        links:
            - graylog
        depends_on:
            - graylog

    #frontend
    signalr.webpack.server.frontend:
        container_name: signalr.webpack.server.frontend
        build:
            context: .
            dockerfile: ./docker/signalr.webpack.server.frontend/Dockerfile
        ports:
            - 9000:9000
        command: npm run start
        networks:
            bridge:
        depends_on:
            - exchange.service
            - graylog
        links:
            - exchange.service
            - graylog